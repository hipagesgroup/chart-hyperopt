apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "hyperopt.fullname" . }}-workers
  labels:
    app.kubernetes.io/name: {{ include "hyperopt.name" . }}-workers
    helm.sh/chart: {{ include "hyperopt.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.worker.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "hyperopt.name" . }}c
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "hyperopt.name" . }}-workers
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.worker.image.repository }}:{{ .Values.worker.image.tag }}"
          imagePullPolicy: {{ .Values.worker.image.pullPolicy }}
          command:
            - ./launch_model_fitter.sh
          args: ["hyperopt-worker"]
          env:
            - name: AWS_REGION
              value: "{{ getenv "AWS_DEFAULT_REGION" }}"
            - name: AWS_DEFAULT_REGION
              value: "{{ getenv "AWS_DEFAULT_REGION" }}"
            - name: AWS_ACCOUNT_ID
              value: "{{ getenv "AWS_ACCOUNT_ID" }}"
            - name: TOOLS_TAG
              value: "{{ getenv "TOOLS_TAG" }}"
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "hyperopt.name" . }}
                  key: aws_secret_access_key
            - name: AWS_S3_BUCKET
              value: "au-com-hipages-radagast"
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "hyperopt.name" . }}
                  key: aws_access_key_id
            - name: MONGO_DB_ADDRESS
              value: "hyperopt-mongo.datascience.svc.cluster.local"
            - name: MONGO_DB_PORT
              value: "27017"
            - name: SCORING_METRIC
              value: "{{ getenv "SCORING_METRIC" }}"
            - name: DATA_SHELF_PATH
              value: "/scratchpad/data_shelf"
            - name: LOGLEVEL
              value: "DEBUG"
            - name: OPTIMISER_CONFIGURATION_PATH
              value: "/scratchpad/data_shelf/configuration.dict"
            - name: OPTIMISER_CONFIGURATION_LOCATION
              value: "S3"
            {{- range $key, $val := .Values.worker.env }}
            - name: {{ $key | upper }}
              value: {{ $val | quote }}
            {{- end}}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
{{ toYaml .Values.worker.resources | indent 12 }}
    {{- with .Values.worker.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.worker.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.worker.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
